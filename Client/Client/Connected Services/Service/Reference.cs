//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Service
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseEntity", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Service.Score))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Service.Role))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Service.User))]
    public partial class BaseEntity : object
    {
        
        private int IdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Score", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    public partial class Score : Service.BaseEntity
    {
        
        private int LevelField;
        
        private int PointsField;
        
        private Service.Role RoleField;
        
        private Service.User UserField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Level
        {
            get
            {
                return this.LevelField;
            }
            set
            {
                this.LevelField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Points
        {
            get
            {
                return this.PointsField;
            }
            set
            {
                this.PointsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Service.Role Role
        {
            get
            {
                return this.RoleField;
            }
            set
            {
                this.RoleField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Service.User User
        {
            get
            {
                return this.UserField;
            }
            set
            {
                this.UserField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Role", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    public partial class Role : Service.BaseEntity
    {
        
        private string TypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type
        {
            get
            {
                return this.TypeField;
            }
            set
            {
                this.TypeField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    public partial class User : Service.BaseEntity
    {
        
        private bool IsAdminField;
        
        private string MailField;
        
        private string PasswordField;
        
        private string UsernameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAdmin
        {
            get
            {
                return this.IsAdminField;
            }
            set
            {
                this.IsAdminField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mail
        {
            get
            {
                return this.MailField;
            }
            set
            {
                this.MailField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password
        {
            get
            {
                return this.PasswordField;
            }
            set
            {
                this.PasswordField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username
        {
            get
            {
                return this.UsernameField;
            }
            set
            {
                this.UsernameField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="UserList", Namespace="http://schemas.datacontract.org/2004/07/Model", ItemName="User")]
    public class UserList : System.Collections.Generic.List<Service.User>
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="RoleList", Namespace="http://schemas.datacontract.org/2004/07/Model", ItemName="Role")]
    public class RoleList : System.Collections.Generic.List<Service.Role>
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ScoreList", Namespace="http://schemas.datacontract.org/2004/07/Model", ItemName="Score")]
    public class ScoreList : System.Collections.Generic.List<Service.Score>
    {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Service.IGameService")]
    public interface IGameService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/InsertUser", ReplyAction="http://tempuri.org/IGameService/InsertUserResponse")]
        System.Threading.Tasks.Task<bool> InsertUserAsync(Service.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/InsertScore", ReplyAction="http://tempuri.org/IGameService/InsertScoreResponse")]
        System.Threading.Tasks.Task<bool> InsertScoreAsync(Service.Score score);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/Update", ReplyAction="http://tempuri.org/IGameService/UpdateResponse")]
        System.Threading.Tasks.Task UpdateAsync(Service.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/Delete", ReplyAction="http://tempuri.org/IGameService/DeleteResponse")]
        System.Threading.Tasks.Task DeleteAsync(Service.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/SaveChanges", ReplyAction="http://tempuri.org/IGameService/SaveChangesResponse")]
        System.Threading.Tasks.Task<int> SaveChangesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/GetAllUsers", ReplyAction="http://tempuri.org/IGameService/GetAllUsersResponse")]
        System.Threading.Tasks.Task<Service.UserList> GetAllUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/GetUserById", ReplyAction="http://tempuri.org/IGameService/GetUserByIdResponse")]
        System.Threading.Tasks.Task<Service.User> GetUserByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/GetUserByUsername", ReplyAction="http://tempuri.org/IGameService/GetUserByUsernameResponse")]
        System.Threading.Tasks.Task<Service.User> GetUserByUsernameAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/GetAllRoles", ReplyAction="http://tempuri.org/IGameService/GetAllRolesResponse")]
        System.Threading.Tasks.Task<Service.RoleList> GetAllRolesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/GetRoleById", ReplyAction="http://tempuri.org/IGameService/GetRoleByIdResponse")]
        System.Threading.Tasks.Task<Service.Role> GetRoleByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/GetRoleByType", ReplyAction="http://tempuri.org/IGameService/GetRoleByTypeResponse")]
        System.Threading.Tasks.Task<Service.Role> GetRoleByTypeAsync(string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/GetAllScores", ReplyAction="http://tempuri.org/IGameService/GetAllScoresResponse")]
        System.Threading.Tasks.Task<Service.ScoreList> GetAllScoresAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/GetScoreById", ReplyAction="http://tempuri.org/IGameService/GetScoreByIdResponse")]
        System.Threading.Tasks.Task<Service.Score> GetScoreByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/GetScoresByUser", ReplyAction="http://tempuri.org/IGameService/GetScoresByUserResponse")]
        System.Threading.Tasks.Task<Service.ScoreList> GetScoresByUserAsync(Service.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/GetScoresByRole", ReplyAction="http://tempuri.org/IGameService/GetScoresByRoleResponse")]
        System.Threading.Tasks.Task<Service.ScoreList> GetScoresByRoleAsync(Service.Role role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/NewGame", ReplyAction="http://tempuri.org/IGameService/NewGameResponse")]
        System.Threading.Tasks.Task<int> NewGameAsync(Service.User user, int level, Service.Role role, int points);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public interface IGameServiceChannel : Service.IGameService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public partial class GameServiceClient : System.ServiceModel.ClientBase<Service.IGameService>, Service.IGameService
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public GameServiceClient() : 
                base(GameServiceClient.GetDefaultBinding(), GameServiceClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IGameService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public GameServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(GameServiceClient.GetBindingForEndpoint(endpointConfiguration), GameServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public GameServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(GameServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public GameServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(GameServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public GameServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<bool> InsertUserAsync(Service.User user)
        {
            return base.Channel.InsertUserAsync(user);
        }
        
        public System.Threading.Tasks.Task<bool> InsertScoreAsync(Service.Score score)
        {
            return base.Channel.InsertScoreAsync(score);
        }
        
        public System.Threading.Tasks.Task UpdateAsync(Service.User user)
        {
            return base.Channel.UpdateAsync(user);
        }
        
        public System.Threading.Tasks.Task DeleteAsync(Service.User user)
        {
            return base.Channel.DeleteAsync(user);
        }
        
        public System.Threading.Tasks.Task<int> SaveChangesAsync()
        {
            return base.Channel.SaveChangesAsync();
        }
        
        public System.Threading.Tasks.Task<Service.UserList> GetAllUsersAsync()
        {
            return base.Channel.GetAllUsersAsync();
        }
        
        public System.Threading.Tasks.Task<Service.User> GetUserByIdAsync(int id)
        {
            return base.Channel.GetUserByIdAsync(id);
        }
        
        public System.Threading.Tasks.Task<Service.User> GetUserByUsernameAsync(string username)
        {
            return base.Channel.GetUserByUsernameAsync(username);
        }
        
        public System.Threading.Tasks.Task<Service.RoleList> GetAllRolesAsync()
        {
            return base.Channel.GetAllRolesAsync();
        }
        
        public System.Threading.Tasks.Task<Service.Role> GetRoleByIdAsync(int id)
        {
            return base.Channel.GetRoleByIdAsync(id);
        }
        
        public System.Threading.Tasks.Task<Service.Role> GetRoleByTypeAsync(string type)
        {
            return base.Channel.GetRoleByTypeAsync(type);
        }
        
        public System.Threading.Tasks.Task<Service.ScoreList> GetAllScoresAsync()
        {
            return base.Channel.GetAllScoresAsync();
        }
        
        public System.Threading.Tasks.Task<Service.Score> GetScoreByIdAsync(int id)
        {
            return base.Channel.GetScoreByIdAsync(id);
        }
        
        public System.Threading.Tasks.Task<Service.ScoreList> GetScoresByUserAsync(Service.User user)
        {
            return base.Channel.GetScoresByUserAsync(user);
        }
        
        public System.Threading.Tasks.Task<Service.ScoreList> GetScoresByRoleAsync(Service.Role role)
        {
            return base.Channel.GetScoresByRoleAsync(role);
        }
        
        public System.Threading.Tasks.Task<int> NewGameAsync(Service.User user, int level, Service.Role role, int points)
        {
            return base.Channel.NewGameAsync(user, level, role, points);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IGameService))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IGameService))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:8733/Design_Time_Addresses/GameServiceLibrary/GameService/");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return GameServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IGameService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return GameServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IGameService);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IGameService,
        }
    }
}
